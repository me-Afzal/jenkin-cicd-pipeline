pipeline {
    agent {
        label 'docker-python-agent'
    }

    options {
        timestamps() // Adds timestamps to the log
    }

    triggers {
        pollSCM('H/2 * * * *') // Poll every 2 minutes
    }

    environment {
        PYTHONUNBUFFERED = 1
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip install --upgrade pip'
                sh 'pip install -r requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    echo "Running tests..."
                    pytest test_app.py 2>&1 | tee pytest.log
                '''
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'pytest.log', onlyIfSuccessful: false
            echo 'üì¶ Pipeline execution completed.'
        }
        success {
            echo '‚úÖ Tests passed successfully!'
        }
        failure {
            echo '‚ùå Tests failed. Check pytest.log for details.'
        }
    }
}
