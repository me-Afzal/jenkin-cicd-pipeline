pipeline {
    agent {
        docker {
            image 'python:3.11-slim'
            args '-u root'
        }
    }
    options {
        timestamps()
    }
    triggers {
        pollSCM('H/2 * * * *')
    }
    environment {
        PYTHONUNBUFFERED = 1
    }
    stages {
        stage('Checkout Code') {
            steps {
                echo 'üì• Checking out code...'
                checkout scm
                sh 'ls -la'
            }
        }
        stage('Check Environment') {
            steps {
                echo 'üßæ Checking Python and Pip version...'
                sh 'python --version'
                sh 'pip --version'
            }
        }
        stage('Install Dependencies') {
            steps {
                echo 'üì¶ Installing dependencies...'
                sh '''
                  set -e
                  pip install --upgrade pip
                  pip install -r requirements.txt
                '''
            }
        }
        stage('Run Tests') {
            steps {
                echo 'üß™ Running tests...'
                sh '''
                  pytest test_app.py 2>&1 | tee pytest.log
                '''
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'pytest.log', onlyIfSuccessful: false
            echo 'üßæ Pipeline execution completed.'
        }
        success { echo '‚úÖ Tests passed!' }
        failure { echo '‚ùå Tests failed!' }
    }
}
